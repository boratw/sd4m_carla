import numpy as np
import json
import cv2
import matplotlib.pyplot as plt


route_straight = [[2.0, 0.0], [4.0, 0.0], [6.0, 0.0], [8.0, 0.0], [10.0, 0.0], [12.0, 0.0], [14.0, 0.0], [16.0, 0.0], [18.0, 0.0], [20.0, 0.0], [22.0, 0.0], [24.0, 0.0], [26.0, 0.0], [28.0, 0.0], [30.0, 0.0], [32.0, 0.0], [34.0, 0.0], [36.0, 0.0], [38.0, 0.0], [40.0, 0.0], [42.0, 0.0], [44.0, 0.0], [46.0, 0.0], [48.0, 0.0], [50.0, 0.0], [52.0, 0.0], [54.0, 0.0], [56.0, 0.0], [58.0, 0.0], [60.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [68.0, 0.0], [70.0, 0.0], [72.0, 0.0], [74.0, 0.0], [76.0, 0.0], [78.0, 0.0], [80.0, 0.0], [82.0, 0.0], [84.0, 0.0], [86.0, 0.0], [88.0, 0.0], [90.0, 0.0], [92.0, 0.0], [94.0, 0.0], [96.0, 0.0], [98.0, 0.0], [100.0, 0.0], [102.0, 0.0], [104.0, 0.0], [106.0, 0.0], [108.0, 0.0], [110.0, 0.0], [112.0, 0.0], [114.0, 0.0], [116.0, 0.0], [118.0, 0.0], [120.0, 0.0], [122.0, 0.0], [124.0, 0.0], [126.0, 0.0], [128.0, 0.0], [130.0, 0.0], [132.0, 0.0], [134.0, 0.0], [136.0, 0.0], [138.0, 0.0], [140.0, 0.0], [142.0, 0.0], [144.0, 0.0], [146.0, 0.0], [148.0, 0.0], [150.0, 0.0], [152.0, 0.0], [154.0, 0.0], [156.0, 0.0], [158.0, 0.0], [160.0, 0.0]]
route_leftturn = [[2.0, 0.0], [4.0, 0.0], [6.0, 0.0], [8.0, 0.0], [10.0, 0.0], [12.0, 0.0], [14.0, 0.0], [16.0, 0.0], [18.0, 0.0], [20.0, 0.0], [22.0, 0.0], [24.0, 0.0], [26.0, 0.0], [28.0, 0.0], [30.0, 0.0], [32.0, 0.0], [34.0, 0.0], [36.0, 0.0], [38.0, 0.0], [40.0, 0.0], [42.0, 0.0], [44.0, 0.0], [46.0, 0.0], [48.0, 0.0], [50.0, 0.0], [52.0, 0.0], [54.0, 0.0], [56.0, 0.0], [58.0, 0.0], [60.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [68.0, 0.0], [70.0, 0.0], [72.0, 0.0], [74.0, 0.0], [76.0, 0.0], [78.0, 0.0], [80.0, 0.0], [82.0, 0.0], [84.0, 0.0], [86.0, 0.0], [88.0, 0.0], [90.0, 0.0], [92.0, 0.0], [94.0, 0.0], [95.9972590693584, -0.10467191536228049], [97.98235137182199, -0.3484106088432736], [99.93864657089418, -0.7642340017483837], [101.84075959814405, -1.3822680069344768], [103.6533751620733, -2.2275045521698322], [105.31145028892918, -3.345890386174309], [106.72566382075165, -4.760103979098025], [107.84404958311882, -6.4181791542738695], [108.68928605003993, -8.230794754721664], [109.30731997304503, -10.132907808673748], [109.7231432814282, -12.089203025711624], [109.96688188914307, -14.074295338705964], [110.07155371821356, -16.071554412586725], [110.07155363180335, -18.07155441258672], [110.07155354539314, -20.07155441258672], [110.07155345898293, -22.07155441258672], [110.07155337257272, -24.07155441258672], [110.07155328616251, -26.07155441258672], [110.0715531997523, -28.07155441258672], [110.07155311334209, -30.07155441258672], [110.07155302693188, -32.07155441258672], [110.07155294052167, -34.07155441258672], [110.07155285411146, -36.07155441258672], [110.07155276770125, -38.07155441258672], [110.07155268129104, -40.07155441258672], [110.07155259488083, -42.07155441258672], [110.07155250847062, -44.07155441258672], [110.0715524220604, -46.07155441258672], [110.0715523356502, -48.07155441258672], [110.07155224923999, -50.07155441258672], [110.07155216282978, -52.07155441258672], [110.07155207641956, -54.07155441258672], [110.07155199000935, -56.07155441258672]]
route_rightturn = [[2.0, 0.0], [4.0, 0.0], [6.0, 0.0], [8.0, 0.0], [10.0, 0.0], [12.0, 0.0], [14.0, 0.0], [16.0, 0.0], [18.0, 0.0], [20.0, 0.0], [22.0, 0.0], [24.0, 0.0], [26.0, 0.0], [28.0, 0.0], [30.0, 0.0], [32.0, 0.0], [34.0, 0.0], [36.0, 0.0], [38.0, 0.0], [40.0, 0.0], [42.0, 0.0], [44.0, 0.0], [46.0, 0.0], [48.0, 0.0], [50.0, 0.0], [52.0, 0.0], [54.0, 0.0], [56.0, 0.0], [58.0, 0.0], [60.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [68.0, 0.0], [70.0, 0.0], [72.0, 0.0], [74.0, 0.0], [76.0, 0.0], [78.0, 0.0], [80.0, 0.0], [82.0, 0.0], [84.0, 0.0], [86.0, 0.0], [88.0, 0.0], [90.0, 0.0], [92.0, 0.0], [94.0, 0.0], [95.99238939576509, 0.1743114902776158], [97.93298084506526, 0.6581552945192664], [99.74559640899452, 1.5033918397546215], [101.32161789374598, 2.7347148191559665], [102.55294080505516, 4.310736357106862], [103.39817727197627, 6.1233519575546556], [103.88202099237446, 8.063943427759353], [104.0563323965707, 10.056332831055592], [104.05633231016049, 12.05633283105559], [104.05633222375027, 14.056332831055588], [104.05633213734006, 16.056332831055585], [104.05633205092985, 18.056332831055585], [104.05633196451964, 20.056332831055585], [104.05633187810943, 22.056332831055585], [104.05633179169922, 24.056332831055585], [104.05633170528901, 26.056332831055585], [104.0563316188788, 28.056332831055585], [104.05633153246859, 30.056332831055585], [104.05633144605838, 32.056332831055585], [104.05633135964817, 34.056332831055585], [104.05633127323796, 36.056332831055585], [104.05633118682775, 38.056332831055585], [104.05633110041754, 40.056332831055585], [104.05633101400733, 42.056332831055585], [104.05633092759712, 44.056332831055585], [104.0563308411869, 46.056332831055585], [104.0563307547767, 48.056332831055585], [104.05633066836648, 50.056332831055585], [104.05633058195627, 52.056332831055585], [104.05633049554606, 54.056332831055585], [104.05633040913585, 56.056332831055585], [104.05633032272564, 58.056332831055585], [104.05633023631543, 60.056332831055585]]
route_uturn = [[2.0, 0.0], [4.0, 0.0], [6.0, 0.0], [8.0, 0.0], [10.0, 0.0], [12.0, 0.0], [14.0, 0.0], [16.0, 0.0], [18.0, 0.0], [20.0, 0.0], [22.0, 0.0], [24.0, 0.0], [26.0, 0.0], [28.0, 0.0], [30.0, 0.0], [32.0, 0.0], [34.0, 0.0], [36.0, 0.0], [38.0, 0.0], [40.0, 0.0], [42.0, 0.0], [44.0, 0.0], [46.0, 0.0], [48.0, 0.0], [50.0, 0.0], [52.0, 0.0], [54.0, 0.0], [56.0, 0.0], [58.0, 0.0], [60.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [68.0, 0.0], [70.0, 0.0], [72.0, 0.0], [74.0, 0.0], [76.0, 0.0], [78.0, 0.0], [80.0, 0.0], [82.0, 0.0], [84.0, 0.0], [86.0, 0.0], [88.0, 0.0], [90.0, 0.0], [92.0, 0.0], [94.0, 0.0], [95.98904379013439, -0.2090569322644298], [97.86842902513864, -0.893097236959997], [99.40051788669064, -2.1786724857526574], [100.24575435361174, -3.991288086200451], [100.24575426720153, -5.991288086200449], [99.40051764365194, -7.803903613611179], [97.86842867101312, -9.089478730015719], [95.98904337690081, -9.773518872313215], [93.99999956870177, -9.982575632703957], [91.99999956870178, -9.982575459883543], [89.9999995687018, -9.98257528706313], [87.99999956870181, -9.982575114242715], [85.99999956870182, -9.982574941422302], [83.99999956870184, -9.982574768601888], [81.99999956870185, -9.982574595781474], [79.99999956870187, -9.98257442296106], [77.99999956870188, -9.982574250140646], [75.9999995687019, -9.982574077320232], [73.99999956870191, -9.982573904499818], [71.99999956870192, -9.982573731679404], [69.99999956870194, -9.98257355885899], [67.99999956870195, -9.982573386038576], [65.99999956870197, -9.982573213218162], [63.99999956870197, -9.982573040397748], [61.99999956870198, -9.982572867577334], [59.99999956870199, -9.98257269475692], [57.999999568701995, -9.982572521936506], [55.999999568702, -9.982572349116092], [53.99999956870201, -9.982572176295678], [51.999999568702016, -9.982572003475264], [49.99999956870202, -9.98257183065485], [47.99999956870203, -9.982571657834436], [45.99999956870204, -9.982571485014022]]

for task in range(11):
    for control in range(5):
        for routeit, route in enumerate([route_straight, route_leftturn, route_rightturn, route_uturn]): 
            with open('test_log/Train2_1/231006_route_test/task_'+ str(task) + '_control_' + str(control) + '_route_' + str(routeit) + '.json') as f:
                json_object = json.load(f)
            step = json_object['routeit']
            lastindices = []
            vels = []
            distances = []
            for i, r in enumerate(step):
                try:
                    lastindex = np.where(np.array(r) == 75)[0][0]
                except:
                    lastindex = len(r) - 1
                lastindices.append(lastindex)
                vels.append(np.sqrt(np.mean(np.array(json_object['vel'][i])[:lastindex] ** 2)))
                distances.append(np.mean(np.array(json_object['distance'][i])[:lastindex]))

            print("mu_vel : " + str(np.mean(vels)))
            print("std_vel : " + str(np.std(vels)))
            print("mu_dist : " + str(np.mean(distances)))
            print("std_dist : " + str(np.std(distances)))

            with open('test_log/Train2_1/task_'+ str(task) + '_control_' + str(control) + '_route_' + str(routeit) + '.txt', 'wt') as f:
                f.write(str(np.mean(vels)) + "\t" + str(np.std(vels)) + "\t" +str(np.mean(distances)) + "\t" +str(np.std(distances)))
            
            traj_map = np.full((4096, 16384, 3), 255, np.uint8)
            if task < 9:
                cv2.polylines(traj_map, np.array([np.array(route) * 128. + np.array((-2048, 2048))], np.int32), False, (0, 0, 0))
                for i, r in enumerate(json_object['pos']):
                    cv2.polylines(traj_map, np.array([np.array(r[:lastindices[i]]) * 128. + np.array((-2048, 2048))], np.int32), False, (0, 0, 255))
            cv2.imwrite('test_log/Train2_1/task_'+ str(task) + '_control_' + str(control) + '_route_' + str(routeit) + ".png", traj_map)

            lastindex = np.min(lastindices)
            log_action = np.mean(np.array(json_object['action'])[:, :lastindex], axis=0)

            step = np.arange(0, lastindex, 3 )
            plt.figure()
            plt.xlabel('step')
            plt.ylabel('wheel')
            plt.plot(step, log_action[::3, 0], 'ro-', label='FL')
            plt.plot(step, log_action[::3, 1], 'g^-', label='FR')
            plt.plot(step, log_action[::3, 2], 'b*-', label='RL')
            plt.plot(step, log_action[::3, 3], 'cs-', label='RR')
            plt.legend()
            plt.savefig('test_log/Train2_1/wheel_'+ str(task) + '_control_' + str(control) + '_route_' + str(routeit) + ".png", dpi=200)

 